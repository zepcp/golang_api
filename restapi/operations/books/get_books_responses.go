// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"golang_api/models"
)

// GetBooksOKCode is the HTTP code returned for type GetBooksOK
const GetBooksOKCode int = 200

/*GetBooksOK OK

swagger:response getBooksOK
*/
type GetBooksOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Book `json:"body,omitempty"`
}

// NewGetBooksOK creates GetBooksOK with default headers values
func NewGetBooksOK() *GetBooksOK {

	return &GetBooksOK{}
}

// WithPayload adds the payload to the get books o k response
func (o *GetBooksOK) WithPayload(payload []*models.Book) *GetBooksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get books o k response
func (o *GetBooksOK) SetPayload(payload []*models.Book) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBooksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Book, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetBooksUnauthorizedCode is the HTTP code returned for type GetBooksUnauthorized
const GetBooksUnauthorizedCode int = 401

/*GetBooksUnauthorized Unauthorized

swagger:response getBooksUnauthorized
*/
type GetBooksUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBooksUnauthorized creates GetBooksUnauthorized with default headers values
func NewGetBooksUnauthorized() *GetBooksUnauthorized {

	return &GetBooksUnauthorized{}
}

// WithPayload adds the payload to the get books unauthorized response
func (o *GetBooksUnauthorized) WithPayload(payload *models.Error) *GetBooksUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get books unauthorized response
func (o *GetBooksUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBooksUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
